# Nginx WAF Rules (Generated by json2nginx.py)

# Include this file in your 'location' block.

# Initialize waf_blocked variable if not already set
set $waf_blocked "";

if ($waf_exceptions = "high") {
  return 403;
}
if ($waf_exceptions = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_exceptions = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_generic = "high") {
  return 403;
}
if ($waf_generic = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_generic = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_lfi = "high") {
  return 403;
}
if ($waf_lfi = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_lfi = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_rfi = "high") {
  return 403;
}
if ($waf_rfi = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_rfi = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_attack = "high") {
  return 403;
}
if ($waf_attack = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_attack = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_java = "high") {
  return 403;
}
if ($waf_java = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_java = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_fixation = "high") {
  return 403;
}
if ($waf_fixation = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_fixation = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_php = "high") {
  return 403;
}
if ($waf_php = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_php = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_enforcement = "high") {
  return 403;
}
if ($waf_enforcement = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_enforcement = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_xss = "high") {
  return 403;
}
if ($waf_xss = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_xss = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_rce = "high") {
  return 403;
}
if ($waf_rce = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_rce = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

if ($waf_sqli = "high") {
  return 403;
}
if ($waf_sqli = "medium") {
  set $waf_blocked "$waf_blockedmedium-{0},".format(category);
}}
if ($waf_sqli = "low") {
  set $waf_blocked "$waf_blockedlow-{0},".format(category);
}}

# Add a single header with all blocked rule categories if any
if ($waf_blocked != "") {
  add_header X-WAF-Blocked $waf_blocked always;
}
