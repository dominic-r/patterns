name: Validate Nginx Configuration with WAF Rules

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to main branch

jobs:
  validate-nginx-configuration:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download WAF rules
      run: |
        wget https://github.com/fabriziosalmi/patterns/releases/download/latest/nginx_waf.zip -O nginx_waf.zip
        echo "Downloaded nginx_waf.zip"
        ls -lh nginx_waf.zip

    - name: Extract WAF rules
      run: |
        unzip nginx_waf.zip -d waf_rules
        echo "Extracted WAF rules into waf_rules directory"
        ls -lh waf_rules/waf_patterns/nginx/

    - name: Verify WAF rules extraction
      run: |
        if [ ! -d "waf_rules/waf_patterns/nginx" ]; then
          echo "Error: WAF rules directory not found after extraction!"
          exit 1
        fi
        if [ -z "$(ls -A waf_rules/waf_patterns/nginx/*.conf 2>/dev/null)" ]; then
          echo "Error: No .conf files found in waf_rules/waf_patterns/nginx/"
          echo "Contents of waf_rules/waf_patterns/nginx/:"
          ls -l waf_rules/waf_patterns/nginx/
          exit 1
        fi

    - name: Patch .conf files to fix directives
      run: |
        for file in waf_rules/waf_patterns/nginx/*.conf; do
          echo "Patching $file to ensure proper context for directives..."
          # Create a temporary file for the patched content
          temp_file=$(mktemp)

          # Remove any existing http or server blocks
          grep -v "http {" "$file" | grep -v "server {" > "$temp_file"

          # Add server block if 'if' directive is present
          if grep -q "if " "$temp_file"; then
            echo "Adding server block to $file for 'if' directives..."
            echo "server {" >> "$temp_file"
            cat "$file" >> "$temp_file"
            echo "}" >> "$temp_file"
          else
            cat "$file" >> "$temp_file"
          fi

          # Replace the original file with the patched content
          mv "$temp_file" "$file"
          echo "Patched $file:"
          cat "$file"
        done

    - name: Verify nginx.conf exists
      run: |
        if [ ! -f "tests/nginx.conf" ]; then
          echo "Error: tests/nginx.conf not found in the repository!"
          exit 1
        fi

    - name: Validate individual WAF rule files
      run: |
        for file in waf_rules/waf_patterns/nginx/*.conf; do
          echo "Validating $file..."
          # Create a temporary nginx.conf file for validation
          echo "events {" > temp_nginx.conf
          echo "    worker_connections 1024;" >> temp_nginx.conf
          echo "}" >> temp_nginx.conf
          echo "http {" >> temp_nginx.conf
          echo "    include /etc/nginx/$(basename $file);" >> temp_nginx.conf
          echo "}" >> temp_nginx.conf

          # Debug: Print the temporary nginx.conf
          echo "Temporary nginx.conf for validation:"
          cat temp_nginx.conf

          # Validate the file using Docker
          docker run --rm -v $(pwd)/$file:/etc/nginx/$(basename $file):ro \
                         -v $(pwd)/temp_nginx.conf:/etc/nginx/nginx.conf:ro \
                         nginx nginx -t
          if [ $? -ne 0 ]; then
            echo "Error: Validation failed for $file"
            exit 1
          fi
        done

    - name: Merge all WAF rules into a single file
      run: |
        echo "Merging all WAF rules into a single file..."
        echo "http {" > merged_waf_rules.conf
        for file in waf_rules/waf_patterns/nginx/*.conf; do
          echo "Merging $file..."
          cat "$file" >> merged_waf_rules.conf
          echo "" >> merged_waf_rules.conf
        done
        echo "}" >> merged_waf_rules.conf

        echo "Contents of merged_waf_rules.conf:"
        cat merged_waf_rules.conf

    - name: Validate merged WAF rules
      run: |
        echo "Validating merged WAF rules..."
        # Create a temporary nginx.conf file for validation
        echo "events {" > temp_nginx.conf
        echo "    worker_connections 1024;" >> temp_nginx.conf
        echo "}" >> temp_nginx.conf
        cat merged_waf_rules.conf >> temp_nginx.conf

        # Debug: Print the temporary nginx.conf
        echo "Temporary nginx.conf for validation:"
        cat temp_nginx.conf

        # Validate the merged file using Docker
        docker run --rm -v $(pwd)/merged_waf_rules.conf:/etc/nginx/merged_waf_rules.conf:ro \
                       -v $(pwd)/temp_nginx.conf:/etc/nginx/nginx.conf:ro \
                       nginx nginx -t
        if [ $? -ne 0 ]; then
          echo "Error: Validation failed for merged WAF rules"
          exit 1
        fi